
ЛЕКЦИЯ ПО КОМАНДАМ SQL: INSERT, SELECT И ИХ ФУНКЦИИ

Введение в SQL
SQL (Structured Query Language) — это язык структурированных запросов, который используется для взаимодействия с реляционными базами данных. С помощью SQL можно выполнять операции добавления, извлечения, обновления и удаления данных, а также управлять структурами данных в базе.

Основные команды, которые мы рассмотрим в данной лекции, — это INSERT и SELECT. Эти команды позволяют добавлять данные в таблицы и извлекать информацию из базы данных.

1. Команда INSERT
Команда INSERT используется для добавления новых строк (записей) в таблицу базы данных.

Синтаксис:
```sql
INSERT INTO table_name (column1, column2, column3, ...)
VALUES (value1, value2, value3, ...);
```

Пример использования:
Допустим, у нас есть таблица `students`, которая содержит следующие столбцы: `id`, `name`, `age`, `grade`.

```sql
INSERT INTO students (id, name, age, grade)
VALUES (1, 'Алиса', 20, 'A');
```

Этот запрос добавляет запись о студенте Алисе с идентификатором 1, возрастом 20 лет и оценкой «A».

Можно также использовать команду INSERT для добавления данных без указания имен столбцов, если данные передаются для всех столбцов в правильном порядке:

```sql
INSERT INTO students
VALUES (2, 'Боб', 22, 'B');
```

2. Команда SELECT
Команда SELECT используется для извлечения данных из таблицы базы данных. Это одна из наиболее часто используемых команд SQL.

Синтаксис:
```sql
SELECT column1, column2, ...
FROM table_name
WHERE condition;
```

Основные функции команды SELECT:

- Извлечение всех данных из таблицы:
```sql
SELECT * FROM students;
```

Этот запрос возвращает все строки и столбцы из таблицы `students`.

- Извлечение данных из определенных столбцов:
```sql
SELECT name, age FROM students;
```

Этот запрос возвращает только имена и возраст студентов.

- Фильтрация данных с помощью условия WHERE:
```sql
SELECT * FROM students WHERE age > 20;
```

Этот запрос возвращает только тех студентов, возраст которых больше 20 лет.

- Сортировка данных с помощью ORDER BY:
```sql
SELECT * FROM students ORDER BY age DESC;
```

Этот запрос сортирует студентов по убыванию возраста.

- Ограничение количества возвращаемых строк с помощью LIMIT:
```sql
SELECT * FROM students LIMIT 5;
```

Этот запрос возвращает только первые пять строк из таблицы.

3. Комбинация INSERT и SELECT
Иногда возникает необходимость скопировать данные из одной таблицы в другую. Это можно сделать с помощью комбинации команд INSERT и SELECT.

Синтаксис:
```sql
INSERT INTO new_table (column1, column2, ...)
SELECT column1, column2, ...
FROM old_table
WHERE condition;
```

Пример:
```sql
INSERT INTO graduated_students (id, name, age)
SELECT id, name, age
FROM students
WHERE grade = 'A';
```

Этот запрос копирует информацию о студентах с оценкой «A» в таблицу `graduated_students`.

Заключение
Команды INSERT и SELECT — это основа работы с базами данных. INSERT позволяет добавлять новые данные, а SELECT помогает извлекать нужную информацию и фильтровать ее по заданным критериям. Владение этими командами является ключевым навыком для работы с реляционными базами данных.

Совет: экспериментируйте с командами на тестовой базе данных, чтобы лучше понять их работу и возможности.
